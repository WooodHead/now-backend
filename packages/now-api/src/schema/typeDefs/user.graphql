type Query {
  allUsers(
    input: AdminInput
    orderBy: UserOrder
    prefix: String
  ): RootUsersConnection! @admin
  user(id: ID!): User
  currentUser: User!
}

type Mutation {
  createUser(input: CreateUserInput): CreateUserPayload
  updateCurrentUser(input: UpdateCurrentUserInput): UpdateCurrentUserPayload
  blockUser(input: BlockUserInput): BlockUserPayload
  unblockUser(input: BlockUserInput): UnblockUserPayload
  deleteCurrentUser(id: ID): ID!
}

type User implements Node {
  id: ID!
  email: String
  meetupId: String @deprecated
  slackId: String @deprecated
  firstName: Name
  lastName: Name
  bio: String
  location: String
  rsvps(
    first: Int
    last: Int
    after: String
    before: String
  ): UserRsvpsConnection!
  devices: [Device!]
  preferences: GraphQLJSON
  photo: Photo
  birthday: LocalDate @deprecated
  age: Int @deprecated
  # returns true if this user is the currently-authenticated user
  isSelf: Boolean!
  isDeleted: Boolean
  tosCurrent: Boolean
  createdAt: ZonedDateTime
  updatedAt: ZonedDateTime
}

enum UserOrder {
  id
  firstName
  lastName
  createdAt
  updatedAt
}

type RootUsersConnection implements Connection {
  pageInfo: PageInfo!
  count: Int!
  edges: [RootUsersEdge!]!
}

type RootUsersEdge implements Edge {
  cursor: String!
  node: User!
}

type UserRsvpsConnection implements Connection {
  pageInfo: PageInfo!
  count: Int!
  edges: [UserRsvpsEdge!]!
}

type UserRsvpsEdge implements Edge {
  cursor: String!
  node: Rsvp!
}

input BlockUserInput {
  blockedUserId: ID!
}

type BlockUserPayload {
  blockedUser: User
  blockingUser: User
}

type UnblockUserPayload {
  unblockedUser: User
  unblockingUser: User
}

input CreateUserInput {
  email: String!
  meetupId: String @deprecated
  slackId: String @deprecated
  firstName: Name!
  lastName: Name!
  bio: String
  location: String
  preferences: GraphQLJSON
  birthday: LocalDate @deprecated
  invitationCode: String
}

type CreateUserPayload {
  user: User
}

input UpdateCurrentUserInput {
  email: String
  meetupId: String @deprecated
  slackId: String @deprecated
  firstName: Name
  lastName: Name
  bio: String
  location: String
  preferences: GraphQLJSON
  birthday: LocalDate @deprecated
}

type UpdateCurrentUserPayload {
  user: User
}
